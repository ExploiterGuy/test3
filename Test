-- UI Library
local UI = {}
local TweenService = game:GetService("TweenService")

-- Create the main UI frame
function UI:CreateMain(title)
    local ScreenGui = Instance.new("ScreenGui", game.Players.LocalPlayer.PlayerGui)
    local Frame = Instance.new("Frame", ScreenGui)
    local UICornerFrame = Instance.new("UICorner", Frame)
    local Shadow = Instance.new("ImageLabel", Frame) -- Drop shadow effect

    ScreenGui.Name = "DynamicUI"
    ScreenGui.ResetOnSpawn = false

    Frame.Name = "MainFrame"
    Frame.Size = UDim2.new(0, 350, 0, 60)
    Frame.Position = UDim2.new(0.5, -175, 0.5, -120)
    Frame.BackgroundColor3 = Color3.fromRGB(30, 30, 35)
    Frame.BorderSizePixel = 0
    Frame.Draggable = true
    Frame.Active = true
    UICornerFrame.CornerRadius = UDim.new(0, 15)

    -- Add drop shadow to Frame
    Shadow.Name = "Shadow"
    Shadow.Parent = Frame
    Shadow.BackgroundTransparency = 1
    Shadow.Image = "rbxassetid://1316045217" -- Shadow effect asset
    Shadow.Size = UDim2.new(1, 20, 1, 20)
    Shadow.Position = UDim2.new(0, -10, 0, -10)
    Shadow.ImageColor3 = Color3.new(0, 0, 0)
    Shadow.ImageTransparency = 0.6
    Shadow.ScaleType = Enum.ScaleType.Slice
    Shadow.SliceCenter = Rect.new(10, 10, 118, 118)

    local Title = Instance.new("TextLabel", Frame)
    Title.Name = "Title"
    Title.Text = title
    Title.Size = UDim2.new(1, 0, 0, 40)
    Title.TextColor3 = Color3.new(1, 1, 1)
    Title.Font = Enum.Font.GothamBold
    Title.TextSize = 18
    Title.BackgroundTransparency = 1
    Title.TextXAlignment = Enum.TextXAlignment.Center

    -- Fade-in animation for the Frame
    local fadeIn = TweenService:Create(Frame, TweenInfo.new(0.5, Enum.EasingStyle.Quad), {BackgroundTransparency = 0})
    fadeIn:Play()

    return ScreenGui, Frame
end

-- Add a toggle button to the UI
function UI:AddToggle(frame, labelText, toggleCallback)
    local Toggle = Instance.new("Frame", frame)
    local ToggleLabel = Instance.new("TextLabel", Toggle)
    local Button = Instance.new("TextButton", Toggle)
    local Indicator = Instance.new("Frame", Button)
    local UICorner = Instance.new("UICorner", Button)

    Toggle.Name = "Toggle"
    Toggle.Size = UDim2.new(1, -10, 0, 50)
    Toggle.Position = UDim2.new(0.5, -Toggle.Size.X.Offset / 2, 0, frame.Size.Y.Offset)
    Toggle.BackgroundTransparency = 1

    ToggleLabel.Name = "Label"
    ToggleLabel.Text = labelText
    ToggleLabel.Size = UDim2.new(0.7, 0, 1, 0)
    ToggleLabel.TextColor3 = Color3.new(1, 1, 1)
    ToggleLabel.Font = Enum.Font.Gotham
    ToggleLabel.TextSize = 14
    ToggleLabel.BackgroundTransparency = 1
    ToggleLabel.Position = UDim2.new(0.05, 0, 0, 0)

    Button.Name = "Button"
    Button.Size = UDim2.new(0.2, 0, 0.8, 0)
    Button.Position = UDim2.new(0.75, 0, 0.1, 0)
    Button.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)

    UICorner.CornerRadius = UDim.new(1, 0)

    Indicator.Name = "Indicator"
    Indicator.Size = UDim2.new(0.5, 0, 0.5, 0)
    Indicator.Position = UDim2.new(0.25, 0, 0.25, 0)
    Indicator.BackgroundColor3 = Color3.new(0.8, 0.8, 0.8)

    -- Button scale animation effect on hover
    local function scaleButton(button)
        button.MouseEnter:Connect(function()
            TweenService:Create(button, TweenInfo.new(0.1), {Size = button.Size + UDim2.new(0, 8, 0, 3)}):Play()
        end)
        button.MouseLeave:Connect(function()
            TweenService:Create(button, TweenInfo.new(0.1), {Size = button.Size - UDim2.new(0, 8, 0, 3)}):Play()
        end)
    end
    scaleButton(Button)

    local isToggled = false

    Button.MouseButton1Click:Connect(function()
        isToggled = not isToggled
        local goal = {BackgroundColor3 = isToggled and Color3.fromRGB(34, 150, 243) or Color3.new(0.2, 0.2, 0.2)}
        TweenService:Create(Indicator, TweenInfo.new(0.3), goal):Play()
        toggleCallback(isToggled)
    end)

    frame.Size = frame.Size + UDim2.new(0, 0, 0, 50)
end
