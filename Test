local UI = {}
local TweenService = game:GetService("TweenService")

-- Create the main UI frame
function UI:CreateMain(title)
    local ScreenGui = Instance.new("ScreenGui", game.Players.LocalPlayer.PlayerGui)
    local Frame = Instance.new("Frame", ScreenGui)
    local UICornerFrame = Instance.new("UICorner", Frame)
    local UIStrokeFrame = Instance.new("UIStroke", Frame)

    ScreenGui.Name = "DynamicUI"
    ScreenGui.ResetOnSpawn = false

    Frame.Name = "MainFrame"
    Frame.Size = UDim2.new(0, 350, 0, 60) -- Start with default size
    Frame.Position = UDim2.new(0.5, -175, 0.5, -90) -- Centered
    Frame.BackgroundColor3 = Color3.fromRGB(30, 30, 35)
    Frame.BorderSizePixel = 0
    Frame.Draggable = true
    Frame.Active = true
    UICornerFrame.CornerRadius = UDim.new(0, 15)

    -- Shadow effect
    local Shadow = Instance.new("ImageLabel")
    Shadow.Name = "Shadow"
    Shadow.Parent = Frame
    Shadow.BackgroundTransparency = 1
    Shadow.Image = "rbxassetid://1316045217" -- Shadow effect asset
    Shadow.Size = UDim2.new(1, 20, 1, 20)
    Shadow.Position = UDim2.new(0, -10, 0, -10)
    Shadow.ImageColor3 = Color3.new(0, 0, 0)
    Shadow.ImageTransparency = 0.6
    Shadow.ScaleType = Enum.ScaleType.Slice
    Shadow.SliceCenter = Rect.new(10, 10, 118, 118)

    -- Stroke effect
    UIStrokeFrame.Color = Color3.fromRGB(80, 80, 80)
    UIStrokeFrame.Thickness = 1.5

    local Title = Instance.new("TextLabel", Frame)
    Title.Name = "Title"
    Title.Text = title
    Title.Size = UDim2.new(1, 0, 0, 40) -- Title height
    Title.TextColor3 = Color3.new(1, 1, 1)
    Title.Font = Enum.Font.GothamBold
    Title.TextSize = 18
    Title.BackgroundTransparency = 1
    Title.TextXAlignment = Enum.TextXAlignment.Center

    return ScreenGui, Frame
end

-- Add a toggle button to the UI
function UI:AddToggle(frame, labelText, toggleCallback)
    local Toggle = Instance.new("Frame", frame)
    local ToggleLabel = Instance.new("TextLabel", Toggle)
    local Button = Instance.new("TextButton", Toggle)
    local Indicator = Instance.new("Frame", Button)
    local UICorner = Instance.new("UICorner", Button)

    Toggle.Name = "Toggle"
    Toggle.Size = UDim2.new(1, -20, 0, 70) -- Increased button height
    Toggle.BackgroundTransparency = 1

    -- Calculate the position for the new button
    local buttonCount = 0
    for _, child in pairs(frame:GetChildren()) do
        if child:IsA("Frame") and child.Name == "Toggle" then
            buttonCount = buttonCount + 1
        end
    end

    -- Dynamically calculate the new frame size based on button count
    local buttonHeight = 70 -- Increased height
    local buttonSpacing = 10
    local totalHeight = (buttonHeight + buttonSpacing) * buttonCount + 40 -- Total height of buttons + title
    frame.Size = UDim2.new(0, 350, 0, totalHeight)

    -- Position the button correctly
    local buttonY = (buttonCount * (buttonHeight + buttonSpacing)) + 40
    Toggle.Position = UDim2.new(0, 10, 0, buttonY)

    -- Label for the toggle
    ToggleLabel.Name = "Label"
    ToggleLabel.Text = labelText
    ToggleLabel.Size = UDim2.new(0.7, 0, 1, 0)
    ToggleLabel.TextColor3 = Color3.new(1, 1, 1)
    ToggleLabel.Font = Enum.Font.Gotham
    ToggleLabel.TextSize = 14
    ToggleLabel.BackgroundTransparency = 1
    ToggleLabel.Position = UDim2.new(0.05, 0, 0, 0)

    -- Button to toggle state
    Button.Name = "Button"
    Button.Size = UDim2.new(0.2, 0, 0.8, 0)
    Button.Position = UDim2.new(0.75, 0, 0.1, 0)
    Button.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)

    UICorner.CornerRadius = UDim.new(1, 0)

    -- Indicator to show toggle state
    Indicator.Name = "Indicator"
    Indicator.Size = UDim2.new(0.5, 0, 0.5, 0)
    Indicator.Position = UDim2.new(0.25, 0, 0.25, 0)
    Indicator.BackgroundColor3 = Color3.new(0.8, 0.8, 0.8)

    local isToggled = false

    -- Toggle functionality
    Button.MouseButton1Click:Connect(function()
        isToggled = not isToggled
        local goal = {BackgroundColor3 = isToggled and Color3.fromRGB(34, 150, 243) or Color3.new(0.2, 0.2, 0.2)}
        TweenService:Create(Indicator, TweenInfo.new(0.3), goal):Play()
        toggleCallback(isToggled)
    end)
end

-- Add a text box to the UI
function UI:AddTextBox(frame, placeholderText, textBoxCallback)
    local TextBox = Instance.new("Frame", frame)
    local TextInput = Instance.new("TextBox", TextBox)
    local UICorner = Instance.new("UICorner", TextInput)

    TextBox.Name = "TextBox"
    TextBox.Size = UDim2.new(1, -20, 0, 70) -- Increased textbox height
    TextBox.BackgroundTransparency = 1

    -- Calculate the position for the new textbox
    local buttonCount = 0
    for _, child in pairs(frame:GetChildren()) do
        if child:IsA("Frame") and child.Name == "TextBox" then
            buttonCount = buttonCount + 1
        end
    end

    -- Dynamically calculate the new frame size based on textbox count
    local textBoxHeight = 70 -- Increased height
    local textBoxSpacing = 10
    local totalHeight = (textBoxHeight + textBoxSpacing) * buttonCount + 40 -- Total height of textboxes + title
    frame.Size = UDim2.new(0, 350, 0, totalHeight)

    -- Position the textbox correctly
    local textBoxY = (buttonCount * (textBoxHeight + textBoxSpacing)) + 40
    TextBox.Position = UDim2.new(0, 10, 0, textBoxY)

    -- Text input
    TextInput.Name = "Input"
    TextInput.Size = UDim2.new(1, 0, 0.8, 0)
    TextInput.Position = UDim2.new(0, 0, 0.1, 0)
    TextInput.PlaceholderText = placeholderText
    TextInput.TextColor3 = Color3.new(1, 1, 1)
    TextInput.Font = Enum.Font.Gotham
    TextInput.TextSize = 14
    TextInput.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)
    TextInput.ClearTextOnFocus = true

    UICorner.CornerRadius = UDim.new(0.1, 0)

    -- Callback for text change
    TextInput.FocusLost:Connect(function()
        textBoxCallback(TextInput.Text)
    end)
end
